logging.level.org.springframework.spring.security = TRACE;

spring.datasource.url=jdbc:postgresql://localhost:5432/hiring-platform
spring.datasource.username=postgres
spring.datasource.password=myPassword
spring.jpa.hibernate.ddl-auto=update
spring.datasource.driver-class-name=org.postgresql.Driver
spring.h2.console.enabled = true;
spring.h2.console.path = /h2-console;

spring.security.oauth2.client.registration.google.client-id =38062382156-pnra5rn8ht77dn1u5icb6eflqmqtramu.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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

spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=deepanr9786@gmail.com
spring.mail.password=fsht cvtw oifi hrjh
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

management.endpoints.web.cors.allowed-origins=http://localhost:3000
management.endpoints.web.cors.allowed-methods=GET,POST


# OAuth 2.0 Client Configuration
#spring.security.oauth2.client.registration.my-client-id.client-id=your-client-id
#spring.security.oauth2.client.registration.my-client-id.client-secret=your-client-secret
#spring.security.oauth2.client.registration.my-client-id.scope=openid,profile,email
#spring.security.oauth2.client.registration.my-client-id.provider=my-oauth-provider
#spring.security.oauth2.client.registration.my-client-id.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
#spring.security.oauth2.client.registration.my-client-id.client-name=Your Client Name
#
#spring.security.oauth2.client.provider.my-oauth-provider.authorization-uri=https://oauth-provider.com/oauth/authorize
#spring.security.oauth2.client.provider.my-oauth-provider.token-uri=https://oauth-provider.com/oauth/token
#spring.security.oauth2.client.provider.my-oauth-provider.user-info-uri=https://oauth-provider.com/oauth/userinfo
